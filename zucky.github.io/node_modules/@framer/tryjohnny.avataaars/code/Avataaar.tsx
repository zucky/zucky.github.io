import * as React from "react";
import {PropertyControls, ControlType} from "framer";

declare global {
	interface Window {
		Avatar: Array<Object>;
	}
}

interface Props {
	width: number;
	height: number;
	avatarType: boolean;
	radius: number;
	img: string;
	initials: string;
	color: string;
	text: string;
	hair: object;
	accessories: object;
	hairColor: object;
	facialHair: object;
	clothes: object;
	eyes: object;
	eyebrow: object;
	mouth: object;
	skin: object;
}

export class Avaaatar extends React.Component<Props> {
	static defaultProps = {
		width: 100,
		height: 100,
		img: null,
		color: "#8CDEDB",
		radius: 0,
		skin: 'Light',
		hair: 'ShortHairShortWaved',
		hairColor: 'Brown',
		accessories: 'Blank',
		facialHair: 'BeardLight',
		clothes: 'Hoodie',
		eyes: 'Squint',
		eyebrow: 'RaisedExcitedNatural',
		mouth: 'Smile'
	};

	state = {img: null};

	static propertyControls: PropertyControls<Props> = {
		radius: {
			type: ControlType.Number,
			min: 0,
			max: 200,
			title: "Radius"
		},
		skin: {
			type: ControlType.Enum,
			title: "Skin Color",
			options: ["Tanned", "Yellow", "Pale", "Light", "Brown", "DarkBrown", "Black"]
		},
		hair: {
			type: ControlType.Enum,
			title: "Top",
			options: ["NoHair", "Eyepatch", "Hat", "Hijab", "Turban", "WinterHat1", "WinterHat2", "WinterHat3", "WinterHat4", "LongHairBigHair", "LongHairBob", "LongHairBun", "LongHairCurly", "LongHairCurvy", "LongHairDreads", "LongHairFrida", "LongHairFro", "LongHairFroBand", "LongHairNotTooLong", "LongHairShavedSides", "LongHairMiaWallace", "LongHairStraight", "LongHairStraight2", "LongHairStraightStrand", "ShortHairDreads01", "ShortHairDreads02", "ShortHairFrizzle", "ShortHairShaggyMullet", "ShortHairShortCurly", "ShortHairShortFlat", "ShortHairShortRound", "ShortHairShortWaved", "ShortHairSides", "ShortHairTheCaesar", "ShortHairTheCaesarSidePart"]
		},
		hairColor: {
			type: ControlType.Enum,
			title: "Hair Color",
			options: ["Auburn", "Black", "Blonde", "BlondeGolden", "Brown", "BrownDark", "PastelPink", "Platinum", "Red", "SilverGray"]
		},
		accessories: {
			type: ControlType.Enum,
			title: "Accessories",
			options: ["Blank","Kurt","Prescription01","Prescription02","Round","Sunglasses","Wayfarers"]
		},
		facialHair: {
			type: ControlType.Enum,
			title: "Facial Hair",
			options: ["Blank", "BeardMedium", "BeardLight", "BeardMagestic", "MoustacheFancy", "MoustacheMagnum"]
		},
		clothes: {
			type: ControlType.Enum,
			title: "Facial Hair",
			options: ["BlazerShirt", "BlazerSweater", "CollarSweater", "GraphicShirt", "Hoodie", "Overall", "ShirtCrewNeck", "ShirtScoopNeck", "ShirtVNeck"]
		},
		eyes: {
			type: ControlType.Enum,
			title: "Eyes",
			options: ["Close", "Cry", "Default", "Dizzy", "EyeRoll", "Happy", "Hearts", "Side", "Squint", "Surprised", "Wink", "WinkWacky"]
		},
		eyebrow: {
			type: ControlType.Enum,
			title: "Eyebrows",
			options: ["Angry", "AngryNatural", "Default", "DefaultNatural", "FlatNatural", "RaisedExcited", "RaisedExcitedNatural", "SadConcerned", "SadConcernedNatural", "UnibrowNatural", "UpDown", "UpDownNatural"]
		},
		mouth: {
			type: ControlType.Enum,
			title: "Mouth",
			options: ["Concerned", "Default", "Disbelief", "Eating", "Grimace", "Sad", "ScreamOpen", "Serious", "Smile", "Tongue", "Twinkle", "Vomit"]
		},
		color: {
			type: ControlType.Color,
			title: "Color"
		}
	};

	render() {
		return (
			<div
				style={{
					width: this.props.width,
					height: this.props.height,
					backgroundColor: this.props.color,
					backgroundImage: `url("https://avataaars.io/?avatarStyle=Transparent&topType=${this.props.hair}&accessoriesType=${this.props.accessories}&hairColor=${this.props.hairColor}&facialHairType=${this.props.facialHair}&clotheType=${this.props.clothes}&clotheColor=Gray01&graphicType=Selena&eyeType=${this.props.eyes}&eyebrowType=${this.props.eyebrow}&mouthType=${this.props.mouth}&skinColor=${this.props.skin}")`,
					backgroundSize: "cover",
					backgroundPosition: "center top",
					backgroundRepeat: "no-repeat",
					display: "flex",
					justifyContent: "center",
					alignItems: "center",
					borderRadius: `${this.props.radius / 2}%`
				}}
			>
			</div>
		);
	}
}
