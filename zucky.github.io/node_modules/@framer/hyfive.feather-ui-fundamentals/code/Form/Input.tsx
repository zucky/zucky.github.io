import * as React from "react";
import { PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
  display: "flex",
  overflow: "hidden",
  padding: "0 20px",
  background: "var(--color-basefill)"
};

// Define type of property
interface Props {
  text: string;
  explainer: string;
  clear: boolean;
  short: boolean;
  textColor: string;

}

export class Input extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    text: "",
    explainer: "Explainer text",
    textColor: "light",
    short: false,
    clear: false,
    width: 375,
    height: 56
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    text: { type: ControlType.String, title: "Text" },
    explainer: { type: ControlType.String, title: "Explainer" },
    clear: { type: ControlType.Boolean, title: "Clear" }

  };

  svg = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
    >
      <g>
        <path
          d="M 12 24 C 5.373 24 0 18.627 0 12 C 0 5.373 5.373 0 12 0 C 18.627 0 24 5.373 24 12 C 24 18.627 18.627 24 12 24 Z"
          fill="rgba(0,0,0,.06)"
        />
      </g>
      <g transform="translate(8 8)">
        <path
          d="M 0 0 L 8 8"
          fill="transparent"
          stroke-width="2"
          stroke="#959595"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M 8 0 L 0 8"
          fill="transparent"
          stroke-width="2"
          stroke="#959595"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </g>
    </svg>
  );

  render() {

    const styles = {
      textField: {
        display: "flex",
        flexDirection: "row",
        justifyContent: "space-between",
        fontSize: 16,
        lineHeight: 1.5,
        width: "100%",
        height: "56px",
        alignItems: "center",
    
        borderBottom: this.props.clear && this.props.text?"1px solid var(--color-weak)":"1px solid rgba(0,0,0,.1)",

        
        transition:"all 0.5s ease-out"
      },
    
      textFieldWithInput: {
        fontSize: 16,
        lineHeight: 1.5,
        width: "100%",
        padding: "14px 0px",
        margin: "2px 20px",
        // color: "rgba(0,0,0,.87)",
        borderBottom: "1px solid rgba(0,0,0,.1)"
      },
    
      shorterTextField: {
        fontSize: 16,
        lineHeight: 1.5,
        width: "100%",
        padding: "14px 0px",
        margin: "2px 20px 2px 60px",
        borderBottom: "1px solid rgba(0,0,0,.1)"
      }
    };
    

    var textField, textColor;
    if (this.props.short == false) {
      textField = styles.textField;
    } else {
      textField = styles.shorterTextField;
    }

    var inputText = <div />;

    return (
      <div style={style}>
        <div style={textField}>
          <span>
            {this.props.text ? (
              <span style={{ color: "var(--color-primary)" }}>
                {this.props.text}
              </span>
            ) : (
              <span style={{ color: "var(--color-weak)" }}>
                {this.props.explainer}
              </span>
            )}
          </span>
          <span style={{display:this.props.clear && this.props.text?"":"none"}}>{this.svg}</span>
        </div>
      </div>
    );
  }
}

