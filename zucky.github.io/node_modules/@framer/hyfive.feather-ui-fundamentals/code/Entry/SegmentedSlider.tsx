import * as React from "react";
import { PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "space-evenly",
  textAlign: "center",
  color: "#8855FF"
};

// Define type of property
interface Props {
  segments: number;
  select: number;
}

export class SegmentedSlider extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    segments: 5,
    select: 1,
    width: 311,
    height: 30
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    segments: {
      type: ControlType.Number,
      title: "Segments",
      displayStepper: true,
      min: 1,
      max: 10
    },
    select: {
      type: ControlType.Number,
      title: "Select",
      displayStepper: true,
      min: 0,
      max: 10
    }
  };

  render() {
    var knobX = (100 / this.props.segments) * (this.props.select) + "%";

    const styles = {
      wrapper: {
        width: "100%",
        padding: "0px 0px"
      },
      rail: {
        display: "flex",
        position: "relative",
        width: "100%",
        height: 1,
        // background: "var(--color-border)",
        background: "#cccccc",
        borderRadius: 4
      },
      segBorderLeft: {
        display: "inline-flex",
        flexGrow: 1,
        height: 9,
        borderLeft: "1px solid #cccccc"
      },
      segBorderBoth: {
        display: "inline-flex",
        flexGrow: 1,
        height: 9,
        borderLeft: "1px solid #cccccc",
        borderRight: "1px solid #cccccc"
      },
      segWrapper: {
        display: "flex",
        position: "absolute",
        width: "100%",
        top: 11
      },
      knob: {
        position: "absolute",
        display: "flex",
        width: 24,
        height: 24,
        borderRadius: 12,
        background: "white",
        boxShadow: "0 2px 8px rgba(0,0,0,.1)",
        transform: "translate(-11px, -13px)",
        left: knobX,
        transition: "left 0.3s ease-out"
      }
    };

    const segs = [];

    var j = this.props.segments - 1;
    for (let i = 0; i < j; i++) {
      var seg = <div style={styles.segBorderLeft} />;
      segs.push(seg);
    }

    const segmentedSlider = (
      <div style={styles.wrapper}>
        {/* rail */}
        <div style={styles.rail} />
        {/* segs */}
        <div style={styles.segWrapper}>
          {segs}
          <div style={styles.segBorderBoth} />
        </div>
        {/* knob */}
        <div style={styles.knob} />
      </div>
    );

    return <div style={style}>{segmentedSlider}</div>;
  }
}
