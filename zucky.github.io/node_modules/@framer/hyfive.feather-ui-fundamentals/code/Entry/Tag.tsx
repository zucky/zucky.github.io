import * as React from "react";
import { PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
  overflow: "hidden"
};

// Define type of property
interface Props {
  initialSelect: number;
  item1: string;
  item2: string;
  thick: string;
}

export class Tag extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    width: 375,
    height: 60,
    item0: "Item 1",
    item1: "Item 2",
    initialSelect: 1,
    thick: false
  };

  // Items shown in property panel
  static propertyControls = (() => {
    let controls = {
      initialSelect: {
        type: ControlType.Number,
        min: 1,
        max: 10,
        title: "Select",
        displayStepper: true
      },
      thick: { type: ControlType.SegmentedEnum,options:["true","false"],optionTitles:["True / h80","False / h60"], title: "Thick" },
      item0: { type: ControlType.String, title: "Item 1" },
      item1: { type: ControlType.String, title: "Item 2" }
    };

    for (let i = 2; i < 9; i++) {
      controls["item" + i] = {
        type: ControlType.String,
        title: "Item " + (i + 1),
        hidden(props) {
          return !props["item" + (i - 1)];
        }
      };
    }
    return controls;
  })();

  state = {
    select: this.props.initialSelect - 1
  };

  componentDidUpdate(prevProps) {
    if (prevProps.initialSelect != this.props.initialSelect) {
      this.setState({ select: this.props.initialSelect - 1 });
    }
  }

  render() {
    let j = [];

    for (
      let i = 0, item = this.props["item" + i];
      item;
      item = this.props["item" + ++i]
    ) {
      j.push(item);
    }

    const styles = {
      wrapper: {
        width: "100%",
        background: "white",
        display: "grid",
        gridTemplateColumns: "repeat(3,1fr)",
        textAlign: "center",
        alignItems: "center",
        justifyContent: "space-inbewteen",
        padding: "12px 20px",
        gap: 10
      }
    };

    var tags = [];
    for (let i = 0; i < j.length; i++) {
      var tagItem = (
        <div
          style={{
            display: "flex",
            justifyContent:"center",
            alignItems: "center",
            ...(i == this.state.select
              ? { background: "var(--color-brand)" }
              : { background: "var(--color-basefill-gray)" }),
            ...(i == this.state.select ? { color: "white" } : {}),
            padding: "10px 0",
            height: this.props.thick=="true" ? 56 : 36,
            borderRadius: "var(--radius-m)",
            whiteSpace: "pre-wrap"
          }}
        >
          {this.props["item" + i].replace('//','\n')}
        </div>

        



      );
      tags.push(tagItem);
    }

    const tag = <div style={styles.wrapper}>{tags}</div>;

    return <div style={style}>{tag}</div>;
  }
}
