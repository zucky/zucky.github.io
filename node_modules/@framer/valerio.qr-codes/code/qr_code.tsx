import * as React from "react";
import * as QRious from "qrious";
import { Frame, PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
  width: "100%",
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  textAlign: "center",
  color: "#8855FF",
  background: "rgba(136, 85, 255, 0)",
  overflow: "hidden"
};

interface QrProps {
  value: string;
  level: string;
  foreground: string;
  background: string;
  size: number;
}

interface QrState {
  dataUrl: string | null;
}

export class Qr extends React.Component<QrProps, QrState> {
  static defaultProps = {
    value: "hello world",
    level: "H",
    foreground: "black",
    background: "white",
    size: 300
  };

  static propertyControls: PropertyControls<QrProps> = {
    value: { type: ControlType.String, title: "Value" },
    level: {
      type: ControlType.Enum,
      title: "Level",
      options: ["L", "M", "Q", "H"]
    },
    foreground: { type: ControlType.Color, title: "Foreground" },
    background: { type: ControlType.Color, title: "Background" }
  };

  state = {
    dataUrl: Qr.getImageData(Qr.defaultProps)
  };

  componentDidMount() {
    this.setState({ dataUrl: Qr.getImageData(this.props) });
  }

  componentWillReceiveProps(props: QrProps) {
    this.setState({ dataUrl: Qr.getImageData(props) });
  }

  static getImageData(props: QrProps) {
    const { value, level, foreground, background, size } = props;
    const qr = new QRious({ value, level, foreground, background, size });
    const dataUrl = qr.toDataURL("image/png");
    return dataUrl;
  }

  render() {
    const { dataUrl } = this.state;

    return (
      <Frame style={{ ...style }}>
        <img src={dataUrl} width={style.width} height={style.height} />
      </Frame>
    );
  }
}
