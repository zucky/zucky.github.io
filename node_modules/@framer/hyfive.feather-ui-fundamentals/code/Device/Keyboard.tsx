import * as React from "react";
import { PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
  display: "flex",
  justifyContent: "flex-end",
  color: "#8855FF",
  overflow: "hidden",
  lineHeight: 1.5,
  padding: 4,
  background: "var(--color-basefill-gray)"
};

// Define type of property
interface Props {
  bRButton: string;
  space: string;
  type: string;
  numKeyCustom: string;
}

export class Keyboard extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    width: 375,
    height: 216,
    bRButton: "Done",
    space: "Space",
    type: "word",
    numKeyCustom: "⌗"
    // line0: "['a','b']"
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    type: {
      type: ControlType.SegmentedEnum,
      options: ["word", "num"],
      optionTitles: ["ABC", "123",]
    },
    bRButton: {
      type: ControlType.String,
      title: "Blue Button",
      hidden(props) {
        return props.type != "word";
      }
    },
    space: {
      type: ControlType.String,
      title: "Space",
      hidden(props) {
        return props.type != "word";
      }
    },
    numKeyCustom: {
      type: ControlType.String,
      title: "Custom Key",
      hidden(props) {
        return props.type != "num";
      }
    }
  };

  // Prepare Everthing, haha
  // line0 = ["Saturn","Jupiter","Mercury"];
  line1 = ["q", "w", "e", "r", "t", "y", "u", "i", "o", "p"];
  line2 = ["a", "s", "d", "f", "g", "h", "j", "k", "l"];
  line3 = ["z", "x", "c", "v", "b", "n", "m"];

  num = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
  // num0 = ["⌗", "0", "⌫"];

  // line0keys = this.line0.map(key => <span>{key}</span>);
  line1keys = this.line1.map(key => <span style={styles.key}>{key}</span>);
  line2keys = this.line2.map(key => <span style={styles.key}>{key}</span>);
  line3keys = this.line3.map(key => <span style={styles.key}>{key}</span>);
  numKeys19 = this.num.map(key => <span style={styles.key}>{key}</span>);
  // numKeys0 = this.num0.map(key => <span style={styles.key}>{key}</span>);

  render() {
    // Construct the keyboard

    var keyboard = (
      <div style={styles.keyboardWrapper}>
        {/* <div style={styles.line0Wrapper}>{this.line0keys}</div> */}
        <div style={styles.line1Wrapper}>{this.line1keys}</div>
        <div style={styles.line2Wrapper}>{this.line2keys}</div>
        <div style={styles.line3ExtraWrapper}>
          <div style={styles.line3ExtraKey}>⇧</div>
          <div style={styles.line3Wrapper}>{this.line3keys}</div>
          <div style={styles.line3ExtraKey}>⌫</div>
        </div>
        <div style={styles.line3ExtraWrapper}>
          <div style={styles.numberKey}>123</div>
          {/* <div style={styles.emojiKey}>☻</div> */}
          <div style={styles.line4Wrapper}>
            <span style={styles.spaceKey}>{this.props.space?this.props.space:"Space"}</span>
          </div>
          <div style={styles.cornerKey}>{this.props.bRButton?this.props.bRButton:"Done"}</div>
        </div>
      </div>
    );

    var numKeyboard = (
      <div style={styles.keyboardWrapper}>
        <div style={numStyles.wrapper}>{this.numKeys19}</div>
        <div style={numStyles.line2Wrapper}>
          <span style={numStyles.grayKey}>
            {this.props.numKeyCustom ? this.props.numKeyCustom : "⌗"}
          </span>
          <span style={styles.key}>0</span>
          <span style={numStyles.grayKey}>⌫</span>
        </div>
      </div>
    );

    var keyboardSelector;

    if(this.props.type =="word"){
      keyboardSelector = keyboard;
    } else if(this.props.type =="num"){
      keyboardSelector = numKeyboard;
    } 

    return <div style={style}>{keyboardSelector}</div>;
  }
}

const styles = {
  keyboardWrapper: {
    display: "flex",
    width: "100%",
    flexDirection: "column",
    justifyContent: "flex-end",
    alignItems: "center",
    fontSize: 22,
    background: "var(--color-basefill-gray)",
    color: "var(--color-primary)"
  },
  line0Wrapper: {
    display: "flex",
    width: "100%",
    justifyContent: "space-around",
    fontSize: 18,
    lineHeight: 1.5,
    padding: 4
  },
  line1Wrapper: {
    display: "grid",
    width: "100%",
    gridTemplateColumns: "repeat(10,1fr)",
    gridGap: "4px 4px",
    paddingTop: 8,
    justifyItems: "stretch"
  },
  line2Wrapper: {
    display: "grid",
    width: "90%",
    gridTemplateColumns: "repeat(9,1fr)",
    gridGap: "4px 4px",
    paddingTop: 8,
    justifyItems: "stretch"
  },
  line3Wrapper: {
    display: "grid",
    width: "70%",
    gridTemplateColumns: "repeat(7,1fr)",
    gridGap: "4px 4px",
    paddingTop: 8,
    justifyItems: "stretch"
  },

  line3ExtraWrapper: {
    display: "flex",
    width: "100%",
    justifyContent: "space-between"
  },
  line4Wrapper: {
    display: "grid",
    width: "50%",
    gridTemplateColumns: "repeat(5,1fr)",
    gridGap: "4px 4px",
    paddingTop: 8,
    justifyItems: "stretch",
    margin: "0 4px"
  },

  key: {
    display: "flex",
    textAlign: "center",
    alignItems: "center",
    justifyContent: "center",
    height: 44,
    background: "var(--color-basefill)",
    boxShadow: "0 1px 1px rgba(0,0,0,.1)",
    borderRadius: 8
  },

  line3ExtraKey: {
    display: "flex",
    textAlign: "center",
    alignItems: "center",
    justifyContent: "center",
    height: 44,
    background: "var(--color-basefill)",
    boxShadow: "0 1px 1px rgba(0,0,0,.1)",
    borderRadius: 8,
    margin: "8px 0 0",
    flexGrow: 1,
    maxWidth: 44
  },
  spaceKey: {
    gridArea: "1 / 1 / 1 / 6",
    display: "flex",
    textAlign: "center",
    alignItems: "center",
    justifyContent: "center",
    height: 44,
    background: "var(--color-basefill)",
    boxShadow: "0 1px 1px rgba(0,0,0,.1)",
    borderRadius: 8,
    fontSize: 17
  },
  numberKey: {
    display: "flex",
    textAlign: "center",
    alignItems: "center",
    justifyContent: "center",
    height: 44,
    background: "rgba(0,0,0,.3)",
    boxShadow: "0 1px 1px rgba(0,0,0,.1)",
    borderRadius: 8,
    margin: "8px 2px 0 0",
    color: "white",
    fontSize: 18,
    width: "25%"
  },
  emojiKey: {
    display: "flex",
    textAlign: "center",
    alignItems: "center",
    justifyContent: "center",
    height: 44,
    background: "var(--color-weak)",
    boxShadow: "0 1px 1px rgba(0,0,0,.1)",
    borderRadius: 8,
    margin: "8px 2px 0",
    color: "white",
    flexGrow: 1,
    fontSize: 22
  },
  cornerKey: {
    display: "flex",
    textAlign: "center",
    alignItems: "center",
    justifyContent: "center",
    height: 44,
    background: "var(--color-brand)",
    boxShadow: "0 1px 1px rgba(0,0,0,.1)",
    borderRadius: 8,
    margin: "8px 0 0",
    width: "25%",
    color: "white",
    fontSize: 17
  }
};

const numStyles = {
  wrapper: {
    display: "grid",
    width: "100%",
    gridTemplateColumns: "repeat(3,1fr)",
    gridTemplateRows: "repeat(3,1fr)",
    gridGap: "8px 8px",
    paddingTop: 8,
    justifyItems: "stretch"
  },
  line2Wrapper: {
    display: "grid",
    width: "100%",
    gridTemplateColumns: "repeat(3,1fr)",
    gridGap: "8px 8px",
    paddingTop: 8,
    justifyItems: "stretch"
  },

  grayKey: {
    display: "flex",
    textAlign: "center",
    alignItems: "center",
    justifyContent: "center",
    height: 44,
    boxShadow: "0 1px 1px rgba(0,0,0,.1)",
    borderRadius: 8,
    background: "var(--color-weak)",
    color: "var(--color-basefill)"
  }
};
