import * as React from "react";
import { PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "space-evenly",
  textAlign: "center",
  flexDirection: "column",
  color: "var(--color-primary)",
  fontSize: 18,
  background: "white",
  position: "relative",
  overflow: "hidden"
};

// Define type of property
interface Props {
  item1: string;
  item2: string;
  item3: string;
  item4: string;
  item5: string;
}

export class Roller extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    width: 375,
    height: 217,
    item1: "Item 1",
    item2: "Item 2",
    item3: "Item 3",
    item4: "Item 4",
    item5: "Item 5"
  };

  // Items shown in property panel
  static propertyControls = (() => {
    let controls = [];
    for (let i = 1; i < 6; i++) {
      controls["item" + i] = {
        type: ControlType.String,
        title: "Item " + i
      };
    }
    return controls;
  })();

  render() {
    let items = [];
    for (let i = 1; i < 6; i++) {
      var decider = Math.abs(3 - i);
      var item = (
        <div
          style={{
            color:
              decider == 2
                ? "rgba(0,0,0,.2)"
                : decider == 1
                ? "rgba(0,0,0,.4)"
                : "rgba(0,0,0,.87)"
          }}
        >
          {this.props["item" + i]}
        </div>
      );
      items.push(item);
    }

    return (
      <div style={style}>
        <div
          style={{
            position: "absolute",
            display: "flex",
            width: "110%",
            height: 40,
            top: 0,
            bottom: 0,
            margin: "auto 0",
            border: "1px solid rgba(0,0,0,.1)"
          }}
        />
        <div style={styles.centerItem}>{items}</div>
      </div>
    );
  }
}

const styles = {
  item: {
    width: "100%"
  },
  centerItem: {
    display: "flex",
    width: "100%",
    height: 185,
    justifyContent: "space-evenly",
    textAlign: "center",
    flexDirection: "column"
  }
};
