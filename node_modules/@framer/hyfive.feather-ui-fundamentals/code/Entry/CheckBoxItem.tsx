import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import { Checkbox } from "./Checkbox";
import "../styles/shared.css";

const style: React.CSSProperties = {
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  textAlign: "center",
  color: "#8855FF",
  background: "rgba(136, 85, 255, 0.1)",
  overflow: "hidden"
};

// Define type of property
interface Props {
  text: string;
  explainer: string;
  checked: boolean;
  type: string;
  disabled: boolean;
}

export class CheckedBoxItem extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    text: "Checkbox",
    checked: true,
    disabled: false,
    explainer: "",
    height: 59,
    width: 375,
    type: "list"
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    type: {
      type: ControlType.SegmentedEnum,
      options: ["form", "list"],
      optionTitles: ["Form / h56 ", "List / h59"],
      title: "Type"
    },
    text: { type: ControlType.String, title: "Text" },
    explainer: { type: ControlType.String, title: "Description" },
    checked: {
      type: ControlType.Boolean,
      title: "Checked"
    },
    disabled: {
      type: ControlType.Boolean,
      title: "Disabled"
    }
  };

  render() {
    const styles = {
      style: {
        alignItems: "center",
      },
    
    
      // listText: {
      //   display: "inline-flex",
      //   flexDirection: "column",
      //   color: (this.props.disabled == false)? "var(--color-primary)" : "var(--color-weak)",
      // },
      explainer: {
        fontSize: "var(--text-s)",
        color: (this.props.disabled == false)? "var(--color-secondary)":"var(--color-weak)",
        fontWeight: 200,
      }
    };

    var listText: React.CSSProperties = {
      display: "inline-flex",
      flexDirection: "column",
      color: (this.props.disabled == false)? "var(--color-primary)" : "var(--color-weak)",
    };


    var styleList, drop, list, form;

    if (this.props.explainer == "") {
        styleList = styles.style;
      } 

     list = (
      <div className = "listItemSharedStyle" style={styleList}>
        <div style={listText}>
          <div >{this.props.text}</div>
          <div style={styles.explainer}>{this.props.explainer}</div>
        </div>
        <Checkbox checked={this.props.checked} disabled={this.props.disabled} />
      </div>
    );

     form = (
      <div className="formItemSharedStyle">
        <Checkbox checked={this.props.checked} disabled={this.props.disabled} />
          <div style={{paddingLeft: 20, color: (this.props.disabled == false)? "var(--color-primary)" : "var(--color-weak)",}}>{this.props.text}</div>
      </div>
    );

    if (this.props.type == "list") {
      drop = list;
      
    } else {
      drop = form;
    }

    return <div>{drop}</div>;
  }
}


