import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import "../styles/shared.css";

const style: React.CSSProperties = {
  //   height: "100%",
  //   display: "flex",
  //   alignItems: "center",
  //   justifyContent: "center",
  //   textAlign: "center",
  //   color: "#8855FF",
  //   background: "rgba(136, 85, 255, 0.1)",
  //   overflow: "hidden"
};

// Define type of property
interface Props {
  type: string;
  text: string;
  explainer: string;
}

export class ListItem extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    text: "List",
    explainer: "",
    height: 59,
    width: 375,
    type: "list"
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    // type: {
    //   type: ControlType.SegmentedEnum,
    //   options: ["form", "list"],
    //   optionTitles: ["Form", "List"],
    //   title: "Type"
    // },
    text: { type: ControlType.String, title: "Text" },
    explainer: { type: ControlType.String, title: "Discription" }
  };

  render() {
    var styleList, list, form;

    if (this.props.explainer == "") {
      styleList = styles.style;
    }
    list = (
      <div className="listItemSharedStyle" style={styleList}>
        <div style={styles.listText}>
          <div>{this.props.text}</div>
          <div style={styles.explainer}>{this.props.explainer}</div>
        </div>
        <div
          className="widgetWraper"
          style={{
            alignItems: this.props.explainer !== "" ? "flex-end" : "center"
          }}
        >
          {this.props.children}
        </div>
      </div>
    );

    // form = (
    //   <div className="formItemSharedStyle">
    //     <div>{this.props.text}</div>
    //   </div>
    // );

    // return <div>{this.props.type == "list" ? list : form}</div>;
    return <div>{list}</div>;
  }
}

const styles = {
  style: {
    alignItems: "center",
    height: "100%",
  },

  listText: {
    display: "inline-flex",
    flexDirection: "column",
    width: "100%"
  },
  explainer: {
    fontSize: "var(--text-s)",
    color: "var(--color-secondary)",
    fontWeight: 200
  }
};
