import * as React from "react";
import { PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
  display: "flex",
  color: "#8855FF",
  overflow: "hidden"
};

// Define type of property
interface Props {
  row: number;
  maxLengthTag: boolean;
  explainer: string;
  text: string;
  maxLength: number;
}

export class InputTextArea extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    width: 375,
    height: 156,
    row: 5,
    explainer: "Please enter your text :)",
    text: "",
    maxLengthTag: true,
    maxLength: 500
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    row: {
      type: ControlType.Number,
      title: "Height",
      min: 1,
      max: 10,
      displayStepper: true
    },
    text: { type: ControlType.String, title: "Text" },
    explainer: { type: ControlType.String, title: "Explainer" },
    maxLengthTag: { type: ControlType.Boolean, title: "Show Tag" },
    maxLength: {
      type: ControlType.Number,
      title: "Max Length",
      min: 1,
      max: 500
    }
  };

  render() {
    var wrapperHeight = this.props.row * 1.5 + 1 + "em";

    const styles = {
      wrapper: {
        width: "100%",
        background: "white",
        padding: "16px 20px 4px"
      },
      textArea: {
        position: "relative",
        height: wrapperHeight,
        lineHeight: 1.5,
        fontSize: 16,
        color: !this.props.text ? "var(--color-weak)" : "var(--color-primary)",
        borderBottom: "1px solid #e0e0e0",
        overflow: "hidden"
      },
      tag: {
        display: this.props.maxLengthTag ? "flex" : "none",
        position: "absolute",

        width: "100%",
        fontSize: "var(--text-xs)",
        padding: "4px 0",
        bottom: 0,
        justifyContent: "flex-end",
        textAlign: "right",
        background: "white"
      }
    };

    var typedTextNumber = this.props.text.length;

    const textArea = (
      <div style={styles.wrapper}>
        <div style={styles.textArea}>
          <div style={styles.tag}>
            <span style={{ color: "var(--color-primary)", paddingRight: 4 }}>
              {typedTextNumber}
            </span>
            <span style={{ color: "var(--color-weak)" }}>
              {"/ " + this.props.maxLength}
            </span>
          </div>
          {!this.props.text ? this.props.explainer : this.props.text}
        </div>
      </div>
    );
    return <div style={style}>{textArea}</div>;
  }
}
