import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import "../styles/style-index.css";
import "../styles/shared.css";

const style: React.CSSProperties = {
  display: "flex",
  alignItems: "center",
  overflow: "hidden",
  flexDirection: "column",
  background: "var(--color-basefill)",
  fontSize: "var(--h1)",
  paddingBottom: 20
};

// Define type of property
interface Props {
  number: number;
  error: string;
  showError: boolean;
}

export class InputVCode extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    number: 2,
    showError: false,
    error: "Oops ... Wrong code.",
    width: 375,
    height: 20
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    number: { type: ControlType.Number, min: 0, max: 4, title: "VCode" },
    showError: { type: ControlType.Boolean, title: "Error" },
    error: { type: ControlType.String, title: "Error Msg." }
  };
  

  render() {
    var codes = [];
    var numbers = [];

    for (var i = 0; i < this.props.number; i++) {
      var random = Math.floor(Math.random() * Math.floor(9));
      numbers.push(random);
    }

    for (var i = 0; i < 4; i++) {
      var number = numbers[i];
      codes.push(
        <div>
          <div className="vcode">
            {number}
            <div
              style={{
                display: number == 0 ? "none" : number ? "none" : "flex",
                position: "absolute",
                width: 20,
                height: 2,
                borderRadius: 5,
                background: "var(--color-primary)"
              }}
            />
          </div>
        </div>
      );
    }

    const error = {
      visibility: this.props.showError ? "" : "hidden",
      fontSize: "var(--text-s)",
      lineHeight: 1.5,
      color: "var(--color-warning)",
      padding: "20px 0px 12px",
      height: 50
    };
    return (
      <div style={style}>
        <div style={error}>{this.props.error}</div>
        <div style={codeWrapper}>{codes}</div>
      </div>
    );
  }
}

const codeWrapper = {
  display: "flex",
  alignItems: "center",
  justifyContent: "center"
};
