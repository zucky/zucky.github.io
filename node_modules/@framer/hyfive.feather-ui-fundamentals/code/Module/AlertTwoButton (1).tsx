import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import "../styles/style-index.css";

const style: React.CSSProperties = {
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  textAlign: "center",
  color: "#121212",
  background: "rgba(0,0,0,.5)",
  overflow: "hidden",
  fontSize: 14,
  lineHeight: 1.5
};

// Define type of property
interface Props {
  title: string;
  text: string;
  buttonLeft: string;
  buttonLeftColor: string;
  buttonRight: string;
  buttonRightColor: string;
}

export class AlertTwoButton extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    title: "A Naughty Title",
    text: "Hello, I'm a Alert Dialog, Please feed Me Some Text :)",
    buttonLeft: "Cancel",
    buttonLeftColor: "dark",
    buttonRight: "Ok",
    buttonRightColor: "blue",
    width: 375,
    height: 667
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    title: { type: ControlType.String, title: "Title" },
    text: { type: ControlType.String, title: "Text" },
    buttonLeft: { type: ControlType.String, title: "Btn L" },
    buttonRight: { type: ControlType.String, title: "Btn R" },
    buttonLeftColor:{
        type:ControlType.SegmentedEnum,
        options: ["dark","blue","red"],
        optionTitles:["Dark","Blue","Red"],
        title: "Btn L Color"},
    buttonRightColor:{
        type:ControlType.SegmentedEnum, 
        options: ["dark","blue","red"],
        optionTitles:["Dark","Blue","Red"],
        title: "Btn R Color"}
  };

  render() {

    const colors = {
        dark:{
            color: "rgba(0,0,0,.87)"
        },
        red: {
            color: "#FF1A1A"
        },
        blue:{
            color: "#547EFF"
        }
    } 

    var colorLeft, colorRight;

    colorLeft = colors[this.props.buttonLeftColor];
    colorRight = colors[this.props.buttonRightColor];

    return (
      <div style={style}>
        <div style={styles.alert}>
          <div style={styles.title}>{this.props.title}</div>
          <div style={styles.text}>{this.props.text}</div>
          <div style={styles.buttonWrapper}>
            <div style={styles.buttonLeft}><span style={ colorLeft }>{this.props.buttonLeft}</span></div>
            <div style={styles.button}><span style={ colorRight }>{this.props.buttonRight}</span></div>
          </div>
        </div>
      </div>
    );
  }
}

const styles = {
  alert: {
    width: 280,
    background: "white",
    borderRadius: 12,
    boxShadow: "var(--shadow-l)"
  },

  title: {
    fontSize: 16,
    fontWeight: 600,
    paddingTop: 16
  },

  text: {
    width: "100%",
    padding: "8px 20px 16px"
  },

  button: {
    display: "inline-flex",
    width: "50%",
    justifyContent: "center",
    alignItems: "center",
    padding: "12px 0px",
    fontSize: 16,
    fontWeight: 400,
    borderTop: ".5px solid rgba(0,0,0,.1)",
  },
  buttonLeft: {
    display: "inline-flex",
    width: "50%",
    justifyContent: "center",
    alignItems: "center",
    padding: "12px 0px",
    fontSize: 16,
    fontWeight: 400,
    borderTop: ".5px solid rgba(0,0,0,.1)",
    borderRight:".5px solid rgba(0,0,0,.1)"
  },
  buttonWrapper: {
    width: "100%",
  }
};
