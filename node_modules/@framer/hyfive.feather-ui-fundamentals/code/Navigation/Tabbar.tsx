import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import "../styles/style-index.css";

const style: React.CSSProperties = {
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  textAlign: "center",
  color: "#8855FF",
  background: "white",
  overflow: "hidden"
};

// Define type of property
interface Props {
  size: string;
  initialSelect: number;
  tab0: string;
  tab1: string;
}

export class Tabbar extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    width: 375,
    height: 55,
    size: "l",
    initialSelect: 1,
    tab0: "Tab 1",
    tab1: "Tab 2"
  };

  // Items shown in property panel
  static propertyControls = (() => {
    let controls = {
      size: {
        type: ControlType.SegmentedEnum,
        options: ["s", "m", "l"],
        optionTitles: ["S / h41", "M / h48", "L / h55"],
        title: "Size"
      },
      initialSelect: {
        type: ControlType.Number,
        title: "Select",
        min: 1,
        max: 10,
        displayStepper: true
      },
      tab0: { type: ControlType.String, title: "Tab 1" },
      tab1: { type: ControlType.String, title: "Tab 2" }
    };

    for (let i = 2; i < 10; i++) {
      controls["tab" + i] = {
        type: ControlType.String,
        title: "Tab " + (i + 1),
        hidden(props) {
          return !props["tab" + (i - 1)];
        }
      };
    }
    return controls;
  })();

  state = {
    select: this.props.initialSelect - 1
  };

  componentDidUpdate(prevProps) {
    if (prevProps.initialSelect != this.props.initialSelect) {
      this.setState({ select: this.props.initialSelect - 1 });
    }
  }

  render() {
    let tabs = [],
      j = [];

    for (
      let i = 0, tab = this.props["tab" + i];
      tab;
      tab = this.props["tab" + ++i]
    ) {
      j.push(tab);
    }

    for (let i = 0; i < j.length; i++) {
      let tab = j[i];
      tabs.push(
        <label
          style={{
            position: "relative",
            display: "inline-flex",
            textAlign: "center",
            lineHeight: 1.5,
            fontSize:
              this.props.size == "l"
                ? "var(--text-l)"
                : this.props.size == "m"
                ? "var(--text-m)"
                : "var(--text-s)",
            padding:
              this.props.size == "l"
                ? "20px 0px 8px"
                : this.props.size == "m"
                ? "16px 0px 8px"
                : "12px 0px 8px",
            marginRight:
              this.props.size == "l" ? 28 : this.props.size == "m" ? 24 : 20,
            // fontWeight: 600,
            ...(i == this.state.select
              ? { fontWeight: 600, color: "var(--color-primary)" }
              : { fontWeight: 300, color: "rgba(0,0,0,0.54)" }),
            // ...(i == this.state.select
            //   ? {
            //       borderBottom: "2px solid",
            //       borderColor: "var(--color-primary)"
            //     }
            //   : {}),
            whiteSpace: "nowrap"
          }}
          key={i}
        >
          <span
            style={{
              display: "inline-flex",
              // padding: "0 0px",
              justifyContent: "center"
            }}
          >
            {tab}
          </span>

          <span
            style={{
              // display: "none",
              position: "absolute",
              height: 2,
              width:
                this.props.size == "l" ? 40 : this.props.size == "m" ? 30 : 30,
              background: "var(--color-primary)",
              bottom: 0,
              left: 0,
              right: 0,
              margin: "0 auto",
              borderRadius: "var(--radius-m)",
              ...(i == this.state.select
                ? { display: "flex" }
                : { display: "none" })
              // transform: "translateX(25%)"
            }}
          />
        </label>
      );
    }

    return (
      <div
        style={{ padding: "0 20px", background: "white", overflow: "hidden" }}
      >
        <div style={{ width: "200%" }}>{tabs}</div>
      </div>
    );
  }
}
