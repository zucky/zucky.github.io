{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.0.14",
    "schemaVersion": 1000
  },
  "kind": "Package",
  "canonicalReference": "framer",
  "docComment": "",
  "name": "framer",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "(Animatable:0)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "Animatable"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "value"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Animatable"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Animatable"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              }
            }
          ],
          "name": "Animatable"
        },
        {
          "kind": "Interface",
          "canonicalReference": "(Animatable:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "Animatable"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UpdateObserver"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "Animatable",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "(get:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "get"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "(set:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "set"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 10
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "(set:1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "set"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "transaction"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "TransactionId"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "transaction",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  }
                }
              ],
              "name": "set"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(Animatable:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "Animatable"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Animatable",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(get:0)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "get"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "defaultValue"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 13
                  }
                },
                {
                  "parameterName": "defaultValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 17
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Function",
              "canonicalReference": "(getNumber:0)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "getNumber"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<number> | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "defaultValue"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "defaultValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "name": "getNumber"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "(animate:0)",
          "docComment": "/**\n * Animate a value or object.\n *\n * @remarks\n *\n * Recommended use is to use convenience functions from the `animate` namespace instead of passing an animator. Only use this for low-level animation tweaking.\n *\n * @param from - The animatable value or object to start from\n *\n * @param to - The value to animate to\n *\n * @param animator - Animator to use.\n *\n * @param options - Animation options\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "animate"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Options"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "from"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Animatable"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "AnimatableObject"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "to"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "animator"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "AnimatorClass"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Options"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "options"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Options"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "AnimationOptions"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "FramerAnimation"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Options"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 42,
            "endIndex": 48
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "from",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 17
              }
            },
            {
              "parameterName": "to",
              "parameterTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 21
              }
            },
            {
              "parameterName": "animator",
              "parameterTypeTokenRange": {
                "startIndex": 24,
                "endIndex": 30
              }
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 33,
                "endIndex": 41
              }
            }
          ],
          "name": "animate"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(animate:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "animate"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "animate",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(bezier:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "bezier"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "AnimatableObject"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AnimationOptions"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FramerAnimation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 37
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 30
                  }
                }
              ],
              "name": "bezier"
            },
            {
              "kind": "Function",
              "canonicalReference": "(ease:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "ease"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "AnimatableObject"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EaseOptions"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AnimationOptions"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FramerAnimation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 37
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 30
                  }
                }
              ],
              "name": "ease"
            },
            {
              "kind": "Function",
              "canonicalReference": "(easeIn:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "easeIn"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "AnimatableObject"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EaseOptions"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AnimationOptions"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FramerAnimation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 37
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 30
                  }
                }
              ],
              "name": "easeIn"
            },
            {
              "kind": "Function",
              "canonicalReference": "(easeInOut:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "easeInOut"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "AnimatableObject"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EaseOptions"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AnimationOptions"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FramerAnimation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 37
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 30
                  }
                }
              ],
              "name": "easeInOut"
            },
            {
              "kind": "Function",
              "canonicalReference": "(easeOut:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "easeOut"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "AnimatableObject"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EaseOptions"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AnimationOptions"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FramerAnimation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 37
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 30
                  }
                }
              ],
              "name": "easeOut"
            },
            {
              "kind": "Function",
              "canonicalReference": "(linear:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "linear"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "AnimatableObject"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EaseOptions"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AnimationOptions"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FramerAnimation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 37
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 30
                  }
                }
              ],
              "name": "linear"
            },
            {
              "kind": "Function",
              "canonicalReference": "(spring:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "spring"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "AnimatableObject"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SpringOptions"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AnimationOptions"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FramerAnimation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "SpringOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 37
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 30
                  }
                }
              ],
              "name": "spring"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "(ArrayControlDescription:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ArrayControlDescription"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": " = any, "
            },
            {
              "kind": "Reference",
              "text": "Q"
            },
            {
              "kind": "Content",
              "text": " = any> extends "
            },
            {
              "kind": "Reference",
              "text": "BaseControlDescription"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ArrayControlDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "defaultValue",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "defaultValue"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultValue",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "maxCount",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "maxCount"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxCount",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "propertyControl",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "propertyControl"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "FlatControlDescription"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Q"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "propertyControl",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ControlType"
                },
                {
                  "kind": "Content",
                  "text": "."
                },
                {
                  "kind": "Reference",
                  "text": "Array"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(BezierAnimator:class)",
          "docComment": "/**\n * Animator class using a bezier curve.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "BezierAnimator"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "Animator"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "BezierOptions"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "name": "BezierAnimator",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BezierOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "interpolation"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Interpolation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "isStatic": false,
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "interpolation",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 14
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(current:instance)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "current"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "current",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(destination:instance)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "destination"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "destination",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(interpolator:instance)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "interpolator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Interpolator"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "interpolator",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(isFinished:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isFinished"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "isFinished"
            },
            {
              "kind": "Method",
              "canonicalReference": "(isReady:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isReady"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "isReady"
            },
            {
              "kind": "Property",
              "canonicalReference": "(next:instance)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "next"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "delta"
                },
                {
                  "kind": "Content",
                  "text": ": number) => "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "next",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(progress:instance)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "progress"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "progress",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(setFrom:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setFrom"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setFrom"
            },
            {
              "kind": "Method",
              "canonicalReference": "(setTo:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setTo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "(solveEpsilon:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "solveEpsilon"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "duration"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "duration",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "solveEpsilon"
            },
            {
              "kind": "Method",
              "canonicalReference": "(updateInterpolator:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateInterpolator"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "updateInterpolator"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "(Color:0)",
          "docComment": "/**\n * The Color function can be used to define colors, either as a string value or as an object. All colors are converted to a Color object with `r, g, b`, `h, s, l` and an `a` value. There are also various helpers on the Color function for working with, modifying and detecting colors.\n * ```typescript\n * // HEX\n * const blue = Color(\"#28AFFA\")\n *\n * // RGB\n * const blue = Color(\"rgb(255, 0, 102)\")\n * const blue = Color(255, 0, 102, 255})\n * const blue = Color({r: 255, g: 0, b: 102})\n * const blue = Color({r: 255, g: 0, b: 102, a: 255})\n *\n * // HSL\n * const blue = Color(\"hsl(201, 95, 57)\")\n * const blue = Color({h: 201, s: 95, l: 57})\n * const blue = Color({h: 201, s: 95, l: 57, a: 1})\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function "
            },
            {
              "kind": "Reference",
              "text": "Color"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "color"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "IncomingColor"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Color"
            },
            {
              "kind": "Content",
              "text": " | number"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "r"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "g"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "b"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Color"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 22,
            "endIndex": 23
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "color",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              }
            },
            {
              "parameterName": "r",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              }
            },
            {
              "parameterName": "g",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              }
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 21
              }
            }
          ],
          "name": "Color"
        },
        {
          "kind": "Interface",
          "canonicalReference": "(Color:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface "
            },
            {
              "kind": "Reference",
              "text": "Color"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Color",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "a",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "a",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "b",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "b"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "b",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "format",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "format"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ColorFormat"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "format",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "g",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "g"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "g",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "h",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "h"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "initialValue",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "initialValue"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "initialValue",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "isValid",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isValid"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isValid",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "l",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "l"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "l",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "r",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "r"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "r",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "roundA",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "roundA"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "roundA",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "s",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "s"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "s",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(Color:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace "
            },
            {
              "kind": "Reference",
              "text": "Color"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Color",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(alpha:0)",
              "docComment": "/**\n * Set the alpha value, also known as opacity, of the color.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const transparent = Color.alpha(blue, 0.1)\n * ```\n *\n * @param color - The original color to modify.\n *\n * @param alpha - A number from 1 to 0. Set to 1 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "alpha"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "alpha"
            },
            {
              "kind": "Function",
              "canonicalReference": "(brighten:0)",
              "docComment": "/**\n * Returns a brightened color.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const brightblue = Color.lighten(blue, 20)\n * ```\n *\n * @param color - The color to brighten\n *\n * @param amount - A number, from 0 to 100. Set to 10 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "brighten"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "amount"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "brighten"
            },
            {
              "kind": "Function",
              "canonicalReference": "(darken:0)",
              "docComment": "/**\n * Add black and return a darkened color.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const darkblue = Color.darken(blue, 20)\n * ```\n *\n * @param color - The color to darken.\n *\n * @param amount - A number, from 0 to 100. Set to 10 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "darken"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "amount"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "darken"
            },
            {
              "kind": "Function",
              "canonicalReference": "(desaturate:0)",
              "docComment": "/**\n * Decrease the saturation of a color.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const desaturated = Color.desaturate(blue, 100)\n * ```\n *\n * @param color - The color to modify\n *\n * @param amount - A number from 0 to 100. Set to 10 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "desaturate"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "amount"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "desaturate"
            },
            {
              "kind": "Function",
              "canonicalReference": "(difference:0)",
              "docComment": "/**\n * Calculates the color difference using {@link https://en.wikipedia.org/wiki/Color_difference#Euclidean | Euclidean distance fitting human perception}. Returns a value between 0 and 765\n *\n * @param colorA - A first color.\n *\n * @param colorB - A second color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "difference"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "colorA"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "colorB"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "colorA",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "colorB",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "difference"
            },
            {
              "kind": "Function",
              "canonicalReference": "(equal:0)",
              "docComment": "/**\n * Checks whether two Color objects are equal.\n *\n * @remarks\n * ```typescript\n * Color.equal(Color(\"red\"), Color(\"red\"))  //=> true\n * Color.equal(Color(\"red\"), Color(\"blue\")) //=> false\n *\n * Color.equal(Color(\"#28AFFA\"), Color(\"28AFFB\"))    //=> false\n * Color.equal(Color(\"#28AFFA\"), Color(\"28AFFB\"), 2) //=> true\n * ```\n *\n * @param colorA - The first color\n *\n * @param colorB - The second color\n *\n * @param tolerance - A tolerance for the difference between rgba values. Set to 0.1 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "equal"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "colorA"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "colorB"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "tolerance"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "colorA",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "colorB",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "tolerance",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  }
                }
              ],
              "name": "equal"
            },
            {
              "kind": "Function",
              "canonicalReference": "(grayscale:0)",
              "docComment": "/**\n * Return a fully desaturated color.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const gray = Color.grayscale(blue)\n * ```\n *\n * @param color - The color to convert.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "grayscale"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "grayscale"
            },
            {
              "kind": "Function",
              "canonicalReference": "(grey:0)",
              "docComment": "/**\n * Creates a greyscale color.\n *\n * @remarks\n * ```typescript\n * const gray = Color.gray(0.5)\n * ```\n *\n * @param amount - A number from 0 to 1 representing the amount of white.\n *\n * @param alpha - A number from 0 to 1 representing the alpha. Set to 1 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "grey"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "amount"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "grey"
            },
            {
              "kind": "Function",
              "canonicalReference": "(hueRotate:0)",
              "docComment": "/**\n * Returns a new color for the rotated hue.\n *\n * @param  - color The color to manipulate\n *\n * @param  - angle The angle in degrees in which to rotate the hue.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "hueRotate"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "angle"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "hueRotate"
            },
            {
              "kind": "Function",
              "canonicalReference": "(inspect:0)",
              "docComment": "/**\n * Formats a Color object into a readable string for debugging.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.inspect(blue) //=> \"<Object r:40 g:175 b:250 a:1>\"\n * ```\n *\n * @param color - The Color object to format\n *\n * @param initialValue - A canonical hex string to be used instead of an rgba() value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "inspect"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "initialValue"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "initialValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "inspect"
            },
            {
              "kind": "Function",
              "canonicalReference": "(interpolate:0)",
              "docComment": "/**\n * Returns a function that can be used to transition a color from one value to another.\n *\n * @remarks\n *\n * By default this will use the RGB mix model. Useful for providing to animation tools. See also {@link Color.mix()}.\n * ```typescript\n * const state = Color.interpolate(Color(\"red\"), Color(\"blue\"))\n * state(0)   // Initial state (red)\n * state(0.5) // Mid state (purple)\n * state(1)   // Final state (blue)\n * ```\n *\n * @param colorA - The starting color\n *\n * @param colorB - The final color\n *\n * @param model - The model to use for the mix. One of {@link ColorMixModelType}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "interpolate"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "colorA"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "colorB"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "model"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColorMixModelType"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "progress"
                },
                {
                  "kind": "Content",
                  "text": ": number) => "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "colorA",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "colorB",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "model",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  }
                }
              ],
              "name": "interpolate"
            },
            {
              "kind": "Function",
              "canonicalReference": "(isColor:0)",
              "docComment": "/**\n * Checks if the value is a valid color object or color string. Returns true or false.\n *\n * @remarks\n * ```typescript\n * Color.isColor(\"#28AFFA\") //=> true\n * Color.isColor(Color(\"#28AFFA\")) //=> true\n * ```\n *\n * @param color - The potential color value to validate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "isColor"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ],
              "name": "isColor"
            },
            {
              "kind": "Function",
              "canonicalReference": "(isColorObject:0)",
              "docComment": "/**\n * Checks if the value is a valid Color object. Returns true or false.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.isColorObject(blue) //=> true\n * Color.isColorObject(\"#28AFFA\") //=> false\n * ```\n *\n * @param color - An object representing a color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "isColorObject"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": " is object & "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "isColorObject"
            },
            {
              "kind": "Function",
              "canonicalReference": "(isColorString:0)",
              "docComment": "/**\n * Checks if the value is a valid color string. Returns true or false.\n *\n * @remarks\n * ```typescript\n * Color.isColorString(\"#28AFFA\") //=> true\n * ```\n *\n * @param color - A string representing a color\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "isColorString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "colorString"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string | object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "colorString",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "isColorString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(lighten:0)",
              "docComment": "/**\n * Add white and return a lightened color.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const lightblue = Color.lighten(blue, 20)\n * ```\n *\n * @param color - The color to lighten\n *\n * @param amount - A number, from 0 to 100. Set to 10 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "lighten"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "amount"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "lighten"
            },
            {
              "kind": "Function",
              "canonicalReference": "(mix:0)",
              "docComment": "/**\n * Blend two colors together, optionally based on user input. The fraction defines the distribution between the two colors, and is set to 0.5 by default.\n *\n * @remarks\n * ```typescript\n * // Mix red with yellow\n * const orange = Color.mix(\"red\", \"yellow\", 0.5)\n * ```\n *\n * The `limit` defines if the color can transition beyond its range. This is applicable when transitioning between colors, using Utils.modulate. Below, the limit is set to `true`, so the transition cannot extend beyond the second color.\n * ```typescript\n * fraction = Utils.modulate(offset.x, [0, window.outerWidth], [0, 1], true)\n * Color.mix(\"red\", \"yellow\", fraction, true, \"husl\")\n * ```\n *\n * @param colorA - A color, the first one.\n *\n * @param colorB - A color, the second one.\n *\n * @param fraction - An optional number, from 0 to 1, set to 0.5 by default.\n *\n * @param limit - An optional boolean, set to false by default.\n *\n * @param model - The model to use for the mix. One of {@link ColorMixModelType}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "mix"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "colorA"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "colorB"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "fraction"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "limit"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "model"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColorMixModelType"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 23,
                "endIndex": 25
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "colorA",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "colorB",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "fraction",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  }
                },
                {
                  "parameterName": "limit",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  }
                },
                {
                  "parameterName": "model",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 22
                  }
                }
              ],
              "name": "mix"
            },
            {
              "kind": "Function",
              "canonicalReference": "(multiplyAlpha:0)",
              "docComment": "/**\n * Change the alpha value, also know as opacity, by a multiplier.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const transparent = Color.multiplyAlpha(blue, 0.5)\n * ```\n *\n * @param color - The original color to modify.\n *\n * @param a - A number between 1 and 0, defaults to 1,\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "multiplyAlpha"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "multiplyAlpha"
            },
            {
              "kind": "Function",
              "canonicalReference": "(random:0)",
              "docComment": "/**\n * Returns a Color instance with a random color value set.\n *\n * @remarks\n * ```typescript\n * const random = Color.random()\n * ```\n *\n * @param a - An optional alpha value, set to 1 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "random"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "random"
            },
            {
              "kind": "Function",
              "canonicalReference": "(saturate:0)",
              "docComment": "/**\n * Increase the saturation of a color.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const saturated = Color.saturate(blue, 100)\n * ```\n *\n * @param color - The color to modify\n *\n * @param amount - A number from 0 to 100. Set to 10 by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "saturate"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "amount"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "saturate"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHex:0)",
              "docComment": "/**\n * Formats a Color instance into an hexidecimal value.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toHex(blue) //=> \"28affa\"\n * Color.toHex(Color(\"#FFAAFF\"), true) //=> \"faf\"\n * ```\n *\n * @param color - The color to format\n *\n * @param allow3Char - If true will return short hand colors if possible (defaults to false).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHex"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "allow3Char"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "allow3Char",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "toHex"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHexString:0)",
              "docComment": "/**\n * Formats a Color instance into an hexidecimal string.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toHexString(blue) //=> \"#28affa\"\n * Color.toHexString(Color(\"#FFAAFF\"), true) //=> \"#faf\"\n * ```\n *\n * @param color - The color to format\n *\n * @param allow3Char - If true will return short hand colors if possible (defaults to false).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHexString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "allow3Char"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "allow3Char",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "toHexString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHsl:0)",
              "docComment": "/**\n * Formats a color into an HSL object.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toHsl(blue) //=> {h: 201, s: 0.95, l: 0.56, a: 1}\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHsl"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSLA"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHsl"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHslString:0)",
              "docComment": "/**\n * Formats a Color instance into an HSL string.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toHslString(blue) //=> \"hsl(205, 95%, 57%)\"\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHslString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHslString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHsv:0)",
              "docComment": "/**\n * Formats a Color instance into an HSV object.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toHsv(blue) //=> {h: 201, s: 0.84, v: 0.98, a: 1}\"\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHsv"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSVA"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHsv"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHsvString:0)",
              "docComment": "/**\n * Formats a Color instance into an HSV string.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toHslString(blue) //=> \"hsv(201, 84%, 98%)\"\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHsvString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHsvString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHusl:0)",
              "docComment": "/**\n * Formats a Color instance into an HUSL object.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toHusl(blue) //=> {h: 240, s: 95, l: , a: 1}\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHusl"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSLA"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHusl"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toName:0)",
              "docComment": "/**\n * Formats a Color instance into {@link https://css-tricks.com/snippets/css/named-colors-and-hex-equivalents/ | CSS name} or returns false if unspecified.\n *\n * @remarks\n * ```typescript\n * const green = Color(\"#8FBC8F\")\n * Color.toName(green) //=> \"darkseagreen\"\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toName"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toName"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toRgb:0)",
              "docComment": "/**\n * Formats a color into an RGB object.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toRgb(blue) //=> {r: 40, g: 175, b: 250, a: 1}\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toRgb"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ColorRGBA"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toRgb"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toRgbString:0)",
              "docComment": "/**\n * Formats a Color instance into an RGB string.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toRgbString(blue) //=> \"rgb(40, 175, 250)\"\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toRgbString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toRgbString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toString:0)",
              "docComment": "/**\n * Formats a Color instance into an RGB string.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * Color.toString(blue) //=> \"rgb(40, 175, 250)\"\n * ```\n *\n * @param color - The color to format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(transparent:0)",
              "docComment": "/**\n * Set the alpha value, also known as opacity, of the color to zero.\n *\n * @remarks\n * ```typescript\n * const blue = Color(\"#28AFFA\")\n * const transparent = Color.alpha(blue)\n * ```\n *\n * @param color - The original color to modify.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "transparent"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "transparent"
            },
            {
              "kind": "Variable",
              "canonicalReference": "gray",
              "docComment": "/**\n * Alias for {@link Color.gray()}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "gray"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "grey"
                }
              ],
              "releaseTag": "Public",
              "name": "gray",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "(ControlType:enum)",
          "docComment": "/**\n * Used by the {@link PropertyControls} and specifies the type of user interface for receiving input.\n *\n * @remarks\n *\n * Each field has a distinct set of properties though they all accept `title` and `hidden` properties.\n * ```typescript\n * static propertyControls: PropertyControls<Props> = {\n *   text: {\n *     type: ControlType.String,\n *     title: \"Text\",\n *     hidden: (props) => true  // Return true to hide, receives component props\n *   },\n * }\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare const enum "
            },
            {
              "kind": "Reference",
              "text": "ControlType"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ControlType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "Array",
              "docComment": "/**\n * Allows multiple values per ControlType, provided as an array via props.\n *\n * @remarks\n *\n * For most control types this control will be displayed as an additional section within the properties panel allowing as many fields to be provided as required.\n *\n * For a {@link ControlType.ComponentInstance} the Frame will also gain an additional outlet UI that allows links to be dragged between frames.\n * ```typescript\n * interface Props {\n *   images: string[],\n *   children: React.ReactNode[]\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   images: {\n *     type: ControlType.Array,\n *     propertyControl: {\n *       type: ControlType.Image\n *     }\n *   },\n *   children: {\n *     type: ControlType.Array,\n *     propertyControl: {\n *       type: ControlType.ComponentInstance\n *     }\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Array"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"array\""
                }
              ],
              "releaseTag": "Public",
              "name": "Array",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Boolean",
              "docComment": "/**\n * A control that displays an on/off checkbox, the associated prop will be true/false depending on the state of the checkbox.\n *\n * @remarks\n * ```typescript\n * static propertyControls: PropertyControls<Props> = {\n *   isCentered: {\n *     type: ControlType.Boolean,\n *     title: \"Center\",\n *     defaultValue: true, // Optional default state\n *     disabledTitle: \"Not Centered\", // Optional title when disabled\n *     enabledTitle?: \"Centered\", // Optional title when enabled\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Boolean"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"boolean\""
                }
              ],
              "releaseTag": "Public",
              "name": "Boolean",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Color",
              "docComment": "/**\n * Represents a color value, will be provided as a string via props.\n *\n * @remarks\n *\n * This control is displayed as a color picker and will provide the selected color in either hex (e.g. `\"#afafaf\"`) or hsl (e.g. `hsla(203, 87%, 50%, 0.43)`) notation depending on whether there is a alpha channel.\n * ```typescript\n * interface Props {\n *   background: string\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   background: {\n *     type: ControlType.Color,\n *     defaultValue: \"#ffffff\", // Optional default color\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"color\""
                }
              ],
              "releaseTag": "Public",
              "name": "Color",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "ComponentInstance",
              "docComment": "/**\n * A reference to another component on the canvas, provided via a prop.\n *\n * @remarks\n *\n * The component will have an outlet to allow dragging a link to another Frame. Available frames will also be displayed in a pop-up in the properties panel. The component reference will be provided as a prop, as a convention the name for the prop is usually just `children`.\n *\n * Multiple components can be linked by combining the `ComponentInstance` type with the {@link ControlType.Array}.\n * ```typescript\n * interface Props {\n *   children: React.ReactNode\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   children: {\n *     type: ControlType.ComponentInstance,\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "ComponentInstance"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"componentinstance\""
                }
              ],
              "releaseTag": "Public",
              "name": "ComponentInstance",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Enum",
              "docComment": "/**\n * Represents a list of options, the selected option will be provided as a prop.\n *\n * @remarks\n *\n * This control is displayed as a pop-up menu with one of the items in the list selectable.\n * ```typescript\n * interface Props {\n *   value: \"a\" | \"b\" | \"c\"\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   value: {\n *     type: ControlType.Enum,\n *     defaultValue: \"a\", // Optional selected value\n *     options: [\"a\", \"b\", \"c\"], // The available options\n *     optionTitles: [\"Option A\", \"Option B\", \"Option C\"], Optional human readable titles\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Enum"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"enum\""
                }
              ],
              "releaseTag": "Public",
              "name": "Enum",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "File",
              "docComment": "/**\n * Represents an image resource, will be provided as url via props.\n *\n * @remarks\n *\n * Displayed as an file picker that will open a native file browser. The selected file will be provided as a fully qualified url. The `allowedFileTypes` property must be provided to specify acceptable file types.\n * ```typescript\n * interface Props {\n *   asset: string\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   asset: {\n *     type: ControlType.File,\n *     allowedFileTypes: [\"pdf\"], // Accepted file types\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "File"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"file\""
                }
              ],
              "releaseTag": "Public",
              "name": "File",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "FusedNumber",
              "docComment": "/**\n * A control that can be used to take a single number or four distinct fields. These will be mapped across six associated props.\n *\n * @remarks\n *\n * The canonical example for this control is for border, padding or margin control. It will display an input field to accept a single value and a segmented control allowing values to be provided for four distinct fields. A boolean prop can be used in code to determine whether the single or multi input field was used.\n * ```typescript\n * interface Props {\n *   isPerSide: boolean\n *   border: number\n *   top: number\n *   left: number\n *   right: number\n *   bottom: number\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   title: {\n *     type: ControlType.FusedNumber,\n *     // Optional default value for each field.\n *     defaultValue: 0,\n *     // The prop that determines whether the single or multi value input was used.\n *     toggleKey: \"isPerSide\",\n *     // The individual props to map the values to.\n *     valueKeys: [\"top\", \"left\", \"right\", \"bottom\"],\n *     // Labels for each of the fields.\n *     valueLabels: [\"T\", \"L\", \"R\", \"B\"],\n *     // Optional minimum value for each field.\n *     min: 0,\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "FusedNumber"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"fusednumber\""
                }
              ],
              "releaseTag": "Public",
              "name": "FusedNumber",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Image",
              "docComment": "/**\n * Represents an image resource, will be provided as url via props.\n *\n * @remarks\n *\n * Displayed as an image well with associated file picker. The chosen asset will be provided as a fully qualified url.\n * ```typescript\n * interface Props {\n *   avatar: string\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   avatar: {\n *     type: ControlType.Image,\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Image"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"image\""
                }
              ],
              "releaseTag": "Public",
              "name": "Image",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Number",
              "docComment": "/**\n * A control that accepts a number. This will be provided directly as a prop.\n *\n * @remarks\n *\n * Will display an input field with a range slider by default. The `displayStepper` option can be provided to include a stepper.\n * ```typescript\n * static propertyControls: PropertyControls<Props> = {\n *   offset: {\n *     type: ControlType.Number,\n *     defaultValue: 10, // Optional default value, blank otherwise\n *     max: 1, // Optional upper bound for the input\n *     min: 0, // Optional lower bound for the input\n *     unit: \"px\", // Optional suffix e.g. \"px\" to be dispayed next to the value\n *     step: 0.1, // Optional step for the stepper to increment.\n *     displayStepper: true, // If true stepper will be added to input.\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Number"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"number\""
                }
              ],
              "releaseTag": "Public",
              "name": "Number",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "SegmentedEnum",
              "docComment": "/**\n * Represents a list of options, the selected option will be provided as a prop.\n *\n * @remarks\n *\n * This control is displayed as a segmented control, otherwise exactly the same as {@link ControlType.Enum}.\n * ```typescript\n * interface Props {\n *   value: \"a\" | \"b\" | \"c\"\n * }\n * static propertyControls: PropertyControls<Props> = {\n *   value: {\n *     type: ControlType.SegmentedEnum,\n *     defaultValue: \"a\", // Optional selected value\n *     options: [\"a\", \"b\", \"c\"], // The available options\n *     optionTitles: [\"Option A\", \"Option B\", \"Option C\"], Optional human readable titles\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "SegmentedEnum"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"segmentedenum\""
                }
              ],
              "releaseTag": "Public",
              "name": "SegmentedEnum",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "String",
              "docComment": "/**\n * A control that accepts plain text. This will be provided directly as a prop.\n *\n * @remarks\n *\n * Will display an input field with optional placeholder.\n * ```typescript\n * static propertyControls: PropertyControls<Props> = {\n *   offset: {\n *     type: ControlType.String,\n *     defaultValue: \"Hello World\", // Optional default value, blank otherwise\n *     placeholder: \"Enter some text…\", // Optional placeholder text for empty input\n *   },\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "String"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"string\""
                }
              ],
              "releaseTag": "Public",
              "name": "String",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(ConvertColor:namespace)",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "ConvertColor"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Beta",
          "name": "ConvertColor",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(equals:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "equals"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "b"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Color"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 12
                  }
                }
              ],
              "name": "equals"
            },
            {
              "kind": "Function",
              "canonicalReference": "(getAlpha:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "getAlpha"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "getAlpha"
            },
            {
              "kind": "Function",
              "canonicalReference": "(hsvToHSLString:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "hsvToHSLString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "hsv"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSV"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSVA"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "hsv",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  }
                }
              ],
              "name": "hsvToHSLString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(hsvToString:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "hsvToString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "hsv"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSV"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSVA"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "hsv",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  }
                }
              ],
              "name": "hsvToString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(hueRotate:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "hueRotate"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "angle"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "hueRotate"
            },
            {
              "kind": "Function",
              "canonicalReference": "(isValid:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "isValid"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "isValid"
            },
            {
              "kind": "Function",
              "canonicalReference": "(multiplyAlpha:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "multiplyAlpha"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "alpha"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "multiplyAlpha"
            },
            {
              "kind": "Function",
              "canonicalReference": "(rgbaToString:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "rgbaToString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ColorRGB"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ColorRGBA"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  }
                }
              ],
              "name": "rgbaToString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(setAlpha:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "setAlpha"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "alpha"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "setAlpha"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toColorPickerSquare:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toColorPickerSquare"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "h"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "h",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toColorPickerSquare"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHex:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHex"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHex"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHexOrRgbaString:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHexOrRgbaString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHexOrRgbaString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHSL:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHSL"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSLA"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHSL"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHslString:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHslString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHslString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHSV:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHSV"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ColorHSVA"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHSV"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toHsvString:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toHsvString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toHsvString"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toRgb:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toRgb"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ColorRGBA"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toRgb"
            },
            {
              "kind": "Function",
              "canonicalReference": "(toRgbString:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "toRgbString"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "toRgbString"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "(Data:0)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "Data"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends object = object>("
            },
            {
              "kind": "Reference",
              "text": "initial"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> | object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "initial",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              }
            }
          ],
          "name": "Data"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(Data:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "Data"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Data",
          "members": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(FrameProperties:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "FrameProperties"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ConstraintProperties"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TransformProperties"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "VisualProperties"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FrameProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "backfaceVisible",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "backfaceVisible"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backfaceVisible",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "borderColor",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "borderColor"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "borderColor",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "borderStyle",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "borderStyle"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "BorderStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "borderStyle",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "borderWidth",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "borderWidth"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        "
                },
                {
                  "kind": "Reference",
                  "text": "top"
                },
                {
                  "kind": "Content",
                  "text": ": number;\n        "
                },
                {
                  "kind": "Reference",
                  "text": "bottom"
                },
                {
                  "kind": "Content",
                  "text": ": number;\n        "
                },
                {
                  "kind": "Reference",
                  "text": "left"
                },
                {
                  "kind": "Content",
                  "text": ": number;\n        "
                },
                {
                  "kind": "Reference",
                  "text": "right"
                },
                {
                  "kind": "Content",
                  "text": ": number;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "borderWidth",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 13
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "className",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "className"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "name",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "name"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "perspective",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "perspective"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "perspective",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preserve3d",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "preserve3d"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "preserve3d",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "style",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "style"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "React"
                },
                {
                  "kind": "Content",
                  "text": "."
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "style",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "visible",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "visible"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "visible",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            },
            {
              "startIndex": 7,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(FramerAnimation:class)",
          "docComment": "/**\n * @privateRemarks\n *\n * This could be called just Animation, but it's type would clash with javascript's native Animation: https://developer.mozilla.org/en-US/docs/Web/API/Animation So if you forget the import, you would get weird errors.\n *\n * Also, this class follows the native Animation as much as possible.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "FramerAnimation"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "AnimatorOptions"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "FramerAnimation",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "(cancel:instance,0)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "cancel"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "cancel"
            },
            {
              "kind": "Property",
              "canonicalReference": "(finished:instance)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "finished"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "finished",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(ready:instance)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "ready"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ready",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(FramerEvent:class)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "FramerEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FramerEvent",
          "members": [],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "(ObservableObject:0)",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function "
            },
            {
              "kind": "Reference",
              "text": "ObservableObject"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends object = object>("
            },
            {
              "kind": "Reference",
              "text": "initial"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> | object"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "makeAnimatables"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "observeAnimatables"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AnimatableObject"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 20,
            "endIndex": 24
          },
          "releaseTag": "Beta",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "initial",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              }
            },
            {
              "parameterName": "makeAnimatables",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              }
            },
            {
              "parameterName": "observeAnimatables",
              "parameterTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 19
              }
            }
          ],
          "name": "ObservableObject"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(ObservableObject:namespace)",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace "
            },
            {
              "kind": "Reference",
              "text": "ObservableObject"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Beta",
          "name": "ObservableObject",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(addObserver:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "addObserver"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": " extends object>("
                },
                {
                  "kind": "Reference",
                  "text": "target"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "observer"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Observer"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Cancel"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "observer",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 15
                  }
                }
              ],
              "name": "addObserver"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(Page:class)",
          "docComment": "/**\n * The Page component allows you to create horizontally or vertically swipeable areas. It can be imported from the Framer Library and used in code components. Add children to create pages to swipe between. These children will be stretched to the size of the page component by default, but can also be set to auto to maintain their original size. See {@link PageProperties} for it's properties\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "Page"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "React"
            },
            {
              "kind": "Content",
              "text": "."
            },
            {
              "kind": "Reference",
              "text": "Component"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PageProps"
            },
            {
              "kind": "Content",
              "text": ">> "
            }
          ],
          "releaseTag": "Public",
          "name": "Page",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 11
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "(PageEffect:enum)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "PageEffect"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PageEffect",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "CoverFlow",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "CoverFlow"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"coverflow\""
                }
              ],
              "releaseTag": "Public",
              "name": "CoverFlow",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Cube",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Cube"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"cube\""
                }
              ],
              "releaseTag": "Public",
              "name": "Cube",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "None",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "None"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"none\""
                }
              ],
              "releaseTag": "Public",
              "name": "None",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Pile",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Pile"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"pile\""
                }
              ],
              "releaseTag": "Public",
              "name": "Pile",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Wheel",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Wheel"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"wheel\""
                }
              ],
              "releaseTag": "Public",
              "name": "Wheel",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "(PageEvents:interface)",
          "docComment": "/**\n * Event callbacks for the Page component, can be used to react to and co-ordinate with other components.\n *\n * @remarks\n * ```typescript\n * import { Page, Frame } from \"framer\"\n * const MyPage: React.SFC = props => {\n *   return (\n *     <Page {...props} onChangePage={idx => console.log(idx)}>\n *       <Frame>Hello</Frame>\n *       <Frame>World</Frame>\n *     </Page>\n *   );\n * };\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "PageEvents"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PageEvents",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "(onChangePage:0)",
              "docComment": "/**\n * A callback that will be invoked when changing the page.\n *\n * @remarks\n *\n * This will be invoked when the drag animation begins or when the page changes programatically. It can be used to co-ordinate with other behaviors.\n *\n * @param currentIndex - The current page number\n *\n * @param previousIndex - The index of the previous page\n *\n * @param pageComponent - The Page component for the current page.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onChangePage"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "currentIndex"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "previousIndex"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "pageComponent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Page"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "currentIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "previousIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "pageComponent",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  }
                }
              ],
              "name": "onChangePage"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(PageProperties:interface)",
          "docComment": "/**\n * All properties that can be used with the {@link Page} component it also extends all {@link ScrollProperties} properties.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "PageProperties"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PageProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "alignment",
              "docComment": "/**\n * Alignment of the pages within the component. Either \"start\", \"center\", or \"end\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "alignment"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "PageAlignment"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alignment",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "animateCurrentPageUpdate",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "animateCurrentPageUpdate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "animateCurrentPageUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "contentHeight",
              "docComment": "/**\n * Height of the pages within the component. Either \"auto\" or \"stretch\" or a numeric value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "contentHeight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "PageContentDimension"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentHeight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "contentWidth",
              "docComment": "/**\n * Width of the pages within the component. Either \"auto\" or \"stretch\" or a numeric value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "contentWidth"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "PageContentDimension"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentWidth",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "currentPage",
              "docComment": "/**\n * Index of the current page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "currentPage"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentPage",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "defaultEffect",
              "docComment": "/**\n * Pick an effect from one of the defaults.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "defaultEffect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "PageEffect"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultEffect",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "direction",
              "docComment": "/**\n * Current swipe direction. Either \"horizontal\" or \"vertical\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "direction"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "PageDirection"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "direction",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "draggingEnabled",
              "docComment": "/**\n * Enable dragging of the scroll inside the page component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "draggingEnabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "draggingEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "effect",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "effect"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "CustomPageEffect"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "effect",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gap",
              "docComment": "/**\n * Gap between the page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "gap"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gap",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "momentum",
              "docComment": "/**\n * Enable or disabling momentum, which defines if the page should auto-snap to the next page or not.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "momentum"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "momentum",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "padding",
              "docComment": "/**\n * Padding within the page component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "padding"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "padding",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "paddingBottom",
              "docComment": "/**\n * Bottom padding within the page component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "paddingBottom"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "paddingBottom",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "paddingLeft",
              "docComment": "/**\n * Left padding within the page component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "paddingLeft"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "paddingLeft",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "paddingPerSide",
              "docComment": "/**\n * Set padding on all sides, or one specific one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "paddingPerSide"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "paddingPerSide",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "paddingRight",
              "docComment": "/**\n * Right padding within the page component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "paddingRight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "paddingRight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "paddingTop",
              "docComment": "/**\n * Top padding within the page component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "paddingTop"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "paddingTop",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(PageProps:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "PageProps"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "PageProperties"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "FrameProperties"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "LayerProps"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PageEvents"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DragEvents"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "Frame"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ScrollEvents"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "PageProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            },
            {
              "startIndex": 7,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 13
            },
            {
              "startIndex": 14,
              "endIndex": 20
            },
            {
              "startIndex": 21,
              "endIndex": 25
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "(Point:0)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function "
            },
            {
              "kind": "Reference",
              "text": "Point"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "x"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "y"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Point"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "y",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "name": "Point"
        },
        {
          "kind": "Interface",
          "canonicalReference": "(Point:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface "
            },
            {
              "kind": "Reference",
              "text": "Point"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Point",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "x",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "x"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "y",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "y"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(Point:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace "
            },
            {
              "kind": "Reference",
              "text": "Point"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Point",
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "isEqual",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isEqual"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "a"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Point"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "b"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Point"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                }
              ],
              "releaseTag": "Public",
              "name": "isEqual",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "(print:0)",
          "docComment": "/**\n * Prints to the console.\n *\n * @param args - Arguments to print\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "print"
            },
            {
              "kind": "Content",
              "text": "(..."
            },
            {
              "kind": "Reference",
              "text": "args"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "print"
        },
        {
          "kind": "Function",
          "canonicalReference": "(PropertyStore:0)",
          "docComment": "/**\n * @deprecated\n *\n * Use Data instead\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "PropertyStore"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends object = object>("
            },
            {
              "kind": "Reference",
              "text": "initial"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> | object"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "makeAnimatables"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AnimatableObject"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 16,
            "endIndex": 20
          },
          "releaseTag": "Beta",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "initial",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              }
            },
            {
              "parameterName": "makeAnimatables",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              }
            }
          ],
          "name": "PropertyStore"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(PropertyStore:namespace)",
          "docComment": "/**\n * @deprecated\n *\n * Use Data instead\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "PropertyStore"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Beta",
          "name": "PropertyStore",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(addObserver:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "addObserver"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": " extends object>("
                },
                {
                  "kind": "Reference",
                  "text": "target"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "observer"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Observer"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Cancel"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "observer",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 15
                  }
                }
              ],
              "name": "addObserver"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "(Rect:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "Rect"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Point"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Size"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Rect",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(Rect:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "Rect"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Rect",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(equals:0)",
              "docComment": "/**\n * @param  - rect\n *\n * @param  - other\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "equals"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "other"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "rect",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 12
                  }
                }
              ],
              "name": "equals"
            },
            {
              "kind": "Variable",
              "canonicalReference": "center",
              "docComment": "/**\n * @param  - rect\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "center"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ") => {\n        "
                },
                {
                  "kind": "Reference",
                  "text": "x"
                },
                {
                  "kind": "Content",
                  "text": ": number;\n        "
                },
                {
                  "kind": "Reference",
                  "text": "y"
                },
                {
                  "kind": "Content",
                  "text": ": number;\n    }"
                }
              ],
              "releaseTag": "Beta",
              "name": "center",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "containsPoint",
              "docComment": "/**\n * Checks if a rectangle contains a point\n *\n * @param  - rect The rectangle to check\n *\n * @param  - point The point to check\n *\n * @returns true if the provided rectangle contains the provided point\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "containsPoint"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "point"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Point"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                }
              ],
              "releaseTag": "Beta",
              "name": "containsPoint",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "containsRect",
              "docComment": "/**\n * Returns wether a rect contains another rect entirely\n *\n * @param  - rectA\n *\n * @param  - rectB\n *\n * @returns true if rectA contains rectB\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "containsRect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rectA"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "rectB"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                }
              ],
              "releaseTag": "Public",
              "name": "containsRect",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "isEqual",
              "docComment": "/**\n * @param  - rectA\n *\n * @param  - rectB  @return if the input rectangles are equal in size and position\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isEqual"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rectA"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": " | null, "
                },
                {
                  "kind": "Reference",
                  "text": "rectB"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": " | null) => boolean"
                }
              ],
              "releaseTag": "Public",
              "name": "isEqual",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "maxX",
              "docComment": "/**\n * @param  - rect\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "maxX"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ") => number"
                }
              ],
              "releaseTag": "Beta",
              "name": "maxX",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "maxY",
              "docComment": "/**\n * @param  - rect\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "maxY"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ") => number"
                }
              ],
              "releaseTag": "Beta",
              "name": "maxY",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "minX",
              "docComment": "/**\n * @param  - rect\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "minX"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ") => number"
                }
              ],
              "releaseTag": "Beta",
              "name": "minX",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "minY",
              "docComment": "/**\n * @param  - rect\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "minY"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "rect"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Rect"
                },
                {
                  "kind": "Content",
                  "text": ") => number"
                }
              ],
              "releaseTag": "Beta",
              "name": "minY",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "(RenderTarget:enum)",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "RenderTarget"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Beta",
          "name": "RenderTarget",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "canvas",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "canvas"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"CANVAS\""
                }
              ],
              "releaseTag": "Beta",
              "name": "canvas",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "export",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "export"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"EXPORT\""
                }
              ],
              "releaseTag": "Beta",
              "name": "export",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "preview",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "preview"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"PREVIEW\""
                }
              ],
              "releaseTag": "Beta",
              "name": "preview",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "thumbnail",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "thumbnail"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"THUMBNAIL\""
                }
              ],
              "releaseTag": "Beta",
              "name": "thumbnail",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(RenderTarget:namespace)",
          "docComment": "/**\n * This is a read-only equivalent of RenderEnvironment.target that is exposed to components for context-dependent rendering\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "RenderTarget"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Beta",
          "name": "RenderTarget",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "(current:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "current"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "RenderTarget"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "current"
            },
            {
              "kind": "Function",
              "canonicalReference": "(hasRestrictions:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "hasRestrictions"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "hasRestrictions"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(Scroll:class)",
          "docComment": "/**\n * The Scroll component in Framer allows you create scrollable areas. It can be imported from the Framer Library and used in code components. Add children that exceed the height or width of the component to create horizontally or vertically scrollable areas. See {@link ScrollProperties} for its properties\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "Scroll"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "React"
            },
            {
              "kind": "Content",
              "text": "."
            },
            {
              "kind": "Reference",
              "text": "Component"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ScrollProps"
            },
            {
              "kind": "Content",
              "text": ">> "
            }
          ],
          "releaseTag": "Public",
          "name": "Scroll",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 11
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(ScrollEvents:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ScrollEvents"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ScrollEvents",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "onScroll",
              "docComment": "/**\n * On scroll.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onScroll"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollEventHandler"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onScroll",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "onScrollEnd",
              "docComment": "/**\n * On end of scroll.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onScrollEnd"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollEventHandler"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onScrollEnd",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "onScrollSessionEnd",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onScrollSessionEnd"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollEventHandler"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "onScrollSessionEnd",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "onScrollSessionStart",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onScrollSessionStart"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollEventHandler"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "onScrollSessionStart",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "onScrollStart",
              "docComment": "/**\n * On start of scroll.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onScrollStart"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollEventHandler"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onScrollStart",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(ScrollProperties:interface)",
          "docComment": "/**\n * The properties for the {@link Scroll} component, which are also available within other components, like {@link Page}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ScrollProperties"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ScrollProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "contentOffsetX",
              "docComment": "/**\n * Horizontal offset of the scrollable content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "contentOffsetX"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<number> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentOffsetX",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "contentOffsetY",
              "docComment": "/**\n * Vertical offset of the scrollable content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "contentOffsetY"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Animatable"
                },
                {
                  "kind": "Content",
                  "text": "<number> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentOffsetY",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "direction",
              "docComment": "/**\n * Scrolling direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "direction"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollDirection"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "direction",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "directionLock",
              "docComment": "/**\n * Lock the current scrolling direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "directionLock"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "directionLock",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "draggingEnabled",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "draggingEnabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "draggingEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mouseWheel",
              "docComment": "/**\n * @internalremarks Ignored and deprecated; see https://github.com/framer/company/issues/10018 for future direction\n *\n * @deprecated\n *\n * mouseWheel is always enabled\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "mouseWheel"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mouseWheel",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(ScrollProps:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ScrollProps"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ScrollProperties"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "FrameProperties"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "LayerProps"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ScrollEvents"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DragEvents"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DraggableType"
            },
            {
              "kind": "Content",
              "text": ">> "
            }
          ],
          "releaseTag": "Public",
          "name": "ScrollProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            },
            {
              "startIndex": 7,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 13
            },
            {
              "startIndex": 14,
              "endIndex": 20
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "(Size:0)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function "
            },
            {
              "kind": "Reference",
              "text": "Size"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "width"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "height"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Size"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "width",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "height",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "name": "Size"
        },
        {
          "kind": "Interface",
          "canonicalReference": "(Size:interface)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface "
            },
            {
              "kind": "Reference",
              "text": "Size"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Size",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "height",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "height"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "width",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "width"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(Size:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace "
            },
            {
              "kind": "Reference",
              "text": "Size"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Size",
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "isZero",
              "docComment": "/**\n * Checks if the size has a zero width and zero height\n *\n * @param  - size size to check\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isZero"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "size"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Size"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                }
              ],
              "releaseTag": "Public",
              "name": "isZero",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "zero",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "zero"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Size"
                }
              ],
              "releaseTag": "Public",
              "name": "zero",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(SpringAnimator:class)",
          "docComment": "/**\n * Animator class using a spring curve\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SpringAnimator"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "Animator"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Value"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SpringOptions"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "name": "SpringAnimator",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SpringOptions"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "interpolation"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Interpolation"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "isStatic": false,
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "interpolation",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 14
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "(isFinished:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isFinished"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "isFinished"
            },
            {
              "kind": "Method",
              "canonicalReference": "(isReady:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isReady"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "isReady"
            },
            {
              "kind": "Method",
              "canonicalReference": "(next:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "next"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "delta"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "delta",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "(progress:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "progress"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "progress"
            },
            {
              "kind": "Method",
              "canonicalReference": "(setFrom:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setFrom"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setFrom"
            },
            {
              "kind": "Method",
              "canonicalReference": "(setTo:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setTo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Value"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "(setVelocity:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setVelocity"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "velocity"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "velocity",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setVelocity"
            },
            {
              "kind": "Method",
              "canonicalReference": "(updateInterpolator:instance,0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateInterpolator"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Beta",
              "overloadIndex": 0,
              "parameters": [],
              "name": "updateInterpolator"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(Stack:class)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "Stack"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Layer"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StackProperties"
            },
            {
              "kind": "Content",
              "text": ">, "
            },
            {
              "kind": "Reference",
              "text": "StackState"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "Stack",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 11
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "(transform:0)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "transform"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InputValue"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OutputValue"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "from"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "InputValue"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "InputValue"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "to"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "OutputValue"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OutputValue"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "options"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "transform"
            },
            {
              "kind": "Content",
              "text": "."
            },
            {
              "kind": "Reference",
              "text": "Options"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InputValue"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OutputValue"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "from"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "InputValue"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "OutputValue"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 36,
            "endIndex": 42
          },
          "releaseTag": "Public",
          "overloadIndex": 0,
          "parameters": [
            {
              "parameterName": "from",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 14
              }
            },
            {
              "parameterName": "to",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 22
              }
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 25,
                "endIndex": 35
              }
            }
          ],
          "name": "transform"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "(transform:namespace)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace "
            },
            {
              "kind": "Reference",
              "text": "transform"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "transform",
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "(Options:interface)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface "
                },
                {
                  "kind": "Reference",
                  "text": "Options"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InputValue"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "OutputValue"
                },
                {
                  "kind": "Content",
                  "text": "> "
                }
              ],
              "releaseTag": "Public",
              "name": "Options",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "colorModel",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "colorModel"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColorMixModelType"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorModel",
                  "propertyTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "inputInterpolation",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "inputInterpolation"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Reference",
                      "text": "Interpolation"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "InputValue"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inputInterpolation",
                  "propertyTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 6
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "limit",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "limit"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "limit",
                  "propertyTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "outputInterpolation",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Reference",
                      "text": "outputInterpolation"
                    },
                    {
                      "kind": "Content",
                      "text": ": "
                    },
                    {
                      "kind": "Reference",
                      "text": "Interpolation"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "OutputValue"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "outputInterpolation",
                  "propertyTypeTokenRange": {
                    "startIndex": 2,
                    "endIndex": 6
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Function",
              "canonicalReference": "(value:0)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function "
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InputValue"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "OutputValue"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "InputValue"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "from"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "InputValue"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "InputValue"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "to"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "OutputValue"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "OutputValue"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "transform"
                },
                {
                  "kind": "Content",
                  "text": "."
                },
                {
                  "kind": "Reference",
                  "text": "Options"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InputValue"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "OutputValue"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "OutputValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 40,
                "endIndex": 41
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 18
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 26
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 29,
                    "endIndex": 39
                  }
                }
              ],
              "name": "value"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "AnimatableObject",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "AnimatableObject"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> = {\n    ["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": " in keyof "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "]: "
            },
            {
              "kind": "Reference",
              "text": "ToAnimatableOrValue"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": "]>;\n};"
            }
          ],
          "releaseTag": "Public",
          "name": "AnimatableObject"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "Cancel",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "Cancel"
            },
            {
              "kind": "Content",
              "text": " = () => void;"
            }
          ],
          "releaseTag": "Public",
          "name": "Cancel"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "ControlDescription",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "ControlDescription"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": " = any, "
            },
            {
              "kind": "Reference",
              "text": "Q"
            },
            {
              "kind": "Content",
              "text": " = any> = "
            },
            {
              "kind": "Reference",
              "text": "FlatControlDescription"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "ArrayControlDescription"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Q"
            },
            {
              "kind": "Content",
              "text": ">;"
            }
          ],
          "releaseTag": "Public",
          "name": "ControlDescription"
        },
        {
          "kind": "Variable",
          "canonicalReference": "Draggable",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "Draggable"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "React"
            },
            {
              "kind": "Content",
              "text": "."
            },
            {
              "kind": "Reference",
              "text": "ComponentClass"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FrameProps"
            },
            {
              "kind": "Content",
              "text": "> & "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DraggableProps"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "Frame"
            },
            {
              "kind": "Content",
              "text": ">>>"
            }
          ],
          "releaseTag": "Public",
          "name": "Draggable",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 16
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "Frame",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "Frame"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "React"
            },
            {
              "kind": "Content",
              "text": "."
            },
            {
              "kind": "Reference",
              "text": "ComponentClass"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FrameProps"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "releaseTag": "Public",
          "name": "Frame",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "FrameProps",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "FrameProps"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "CoreFrameProps"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "WithEventsProperties"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FrameProps"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "Override",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "Override"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends object = "
            },
            {
              "kind": "Reference",
              "text": "FrameProps"
            },
            {
              "kind": "Content",
              "text": " & {\n    ["
            },
            {
              "kind": "Reference",
              "text": "key"
            },
            {
              "kind": "Content",
              "text": ": string]: any;\n}> = "
            },
            {
              "kind": "Reference",
              "text": "OverrideObject"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "OverrideFunction"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">;"
            }
          ],
          "releaseTag": "Public",
          "name": "Override"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "OverrideFunction",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "OverrideFunction"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": " extends object = any> = ("
            },
            {
              "kind": "Reference",
              "text": "props"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ">;"
            }
          ],
          "releaseTag": "Public",
          "name": "OverrideFunction"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "OverrideObject",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "OverrideObject"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends object = any> = "
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">;"
            }
          ],
          "releaseTag": "Public",
          "name": "OverrideObject"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "PropertyControls",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "PropertyControls"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComponentProps"
            },
            {
              "kind": "Content",
              "text": " = any, "
            },
            {
              "kind": "Reference",
              "text": "ArrayTypes"
            },
            {
              "kind": "Content",
              "text": " = any> = {\n    ["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": " in keyof "
            },
            {
              "kind": "Reference",
              "text": "ComponentProps"
            },
            {
              "kind": "Content",
              "text": "]?: "
            },
            {
              "kind": "Reference",
              "text": "ControlDescription"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Partial"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComponentProps"
            },
            {
              "kind": "Content",
              "text": ">, "
            },
            {
              "kind": "Reference",
              "text": "ArrayTypes"
            },
            {
              "kind": "Content",
              "text": ">;\n};"
            }
          ],
          "releaseTag": "Public",
          "name": "PropertyControls"
        },
        {
          "kind": "Variable",
          "canonicalReference": "version",
          "docComment": "/**\n * This version is automatically updated by the Makefile\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "version"
            },
            {
              "kind": "Content",
              "text": " = \"0.10.10\""
            }
          ],
          "releaseTag": "Public",
          "name": "version",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        }
      ]
    }
  ]
}
